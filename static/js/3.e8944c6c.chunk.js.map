{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","to","activeClassName","active","avatar","src","userPhoto","name","Message","message","messageFromRight","messageRight","message_right","cn","text","AddMessageForm","handleSubmit","onSubmit","Field","messageTextArea","placeholder","component","sendBtn","Dialogs","dialogs","messages","addMessage","dialogElements","map","data","messageElements","dialogItems","dialogContainer","withFormReset","formData","messageText","trim","DialogsContainer","getDialogFromParamsOrNull","parseInt","match","params","isNaN","setCurrentDialog","this","currentDialog","undefined","React","Component","compose","connect","state","dialogsPage","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.e8944c6c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__15vQN\",\"dialogItems\":\"Dialogs_dialogItems__SO98Z\",\"dialogContainer\":\"Dialogs_dialogContainer__eT0ax\",\"messages\":\"Dialogs_messages__1I9Z0\",\"messageTextArea\":\"Dialogs_messageTextArea__y9T_g\",\"sendBtn\":\"Dialogs_sendBtn__2dPBG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"DialogItem_dialogs__3w0vk\",\"dialogItems\":\"DialogItem_dialogItems__1WgTz\",\"dialog\":\"DialogItem_dialog__2pMpE\",\"avatar\":\"DialogItem_avatar__311Sf\",\"name\":\"DialogItem_name__2yW4c\",\"active\":\"DialogItem_active__7JqAD\",\"messages\":\"DialogItem_messages__1lYMe\",\"message\":\"DialogItem_message__2Ed6T\",\"message_right\":\"DialogItem_message_right__3iup-\",\"text\":\"DialogItem_text__t_e9g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__34qVq\",\"message_right\":\"Message_message_right__2yWF_\",\"text\":\"Message_text__3mNDo\"};","import s from './DialogItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport userPhoto from '../../../assets/images/user-photo.png';\r\n\r\nconst DialogItem = (props) => {\r\n\tconst path = '/dialogs/' + props.id;\r\n\treturn (\r\n\t\t<NavLink className={s.dialog} to={path} activeClassName={s.active}>\r\n\t\t\t<img className={s.avatar} src={userPhoto} />\r\n\t\t\t<div className={s.name}>{props.name}</div>\r\n\t\t</NavLink>\r\n\t);\r\n};\r\n\r\nexport default DialogItem;\r\n","import s from './Message.module.css';\r\nimport cn from 'classnames';\r\n\r\nconst Message = ({ message, messageFromRight }) => {\r\n\tlet messageRight = messageFromRight && s.message_right;\r\n\tif (messageFromRight) messageRight = s.message_right;\r\n\treturn (\r\n\t\t<div className={cn(s.message, messageRight)}>\r\n\t\t\t<div className={s.text}>{message}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport cn from 'classnames';\r\nimport withFormReset from '../hoc/withFormReset';\r\n\r\nconst AddMessageForm = ({ handleSubmit }) => {\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<Field\r\n\t\t\t\tclassName={cn(s.messageTextArea, 'inputBase')}\r\n\t\t\t\tname={'messageText'}\r\n\t\t\t\tplaceholder=\"Write a message...\"\r\n\t\t\t\t// value={newMessageText}\r\n\t\t\t\tcomponent={'textarea'}\r\n\t\t\t/>\r\n\r\n\t\t\t<button className={cn(s.sendBtn, 'btnBase')} name={'addMessageButton'}>\r\n\t\t\t\tsend\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nconst Dialogs = ({ dialogs, messages, addMessage }) => {\r\n\tlet dialogElements = dialogs.map((data) => (\r\n\t\t<DialogItem key={data.id} name={data.name} id={data.id} />\r\n\t));\r\n\tlet messageElements = messages.map((data) => <Message key={data.id} message={data.message} />);\r\n\r\n\tconst shouldResetForm = (formData) => {\r\n\t\treturn formData.messageText && formData.messageText.trim();\r\n\t};\r\n\r\n\tconst onMessageSubmit = (formData) => {\r\n\t\tif (formData.messageText && formData.messageText.trim()) addMessage(formData.messageText);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<main className={s.dialogs}>\r\n\t\t\t<div className={s.dialogItems}>{dialogElements}</div>\r\n\t\t\t<div className={s.dialogContainer}>\r\n\t\t\t\t<div className={s.messages}>{messageElements}</div>\r\n\t\t\t\t{withFormReset(AddMessageForm, 'addMessage', onMessageSubmit, shouldResetForm)}\r\n\t\t\t</div>\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport {\r\n\taddMessage,\r\n\tloadDialogs,\r\n\tsetCurrentDialog,\r\n\tstartChatting,\r\n} from '../../redux/dialogsReducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\n\r\nclass DialogsContainer extends React.Component {\r\n\tcomponentDidMount() {\r\n\t\t// this.props.loadDialogs();\r\n\r\n\t\tconst dialog = this.getDialogFromParamsOrNull() ?? 1;\r\n\t\tthis.setCurrentDialog(dialog);\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\t\tconst dialog = this.getDialogFromParamsOrNull() ?? 1;\r\n\t\tif (dialog !== this.props.currentDialog) {\r\n\t\t\tthis.setCurrentDialog(dialog);\r\n\t\t}\r\n\t}\r\n\r\n\tgetDialogFromParamsOrNull = () => {\r\n\t\tlet dialog = parseInt(this.props.match.params.dialog);\r\n\t\tif (isNaN(dialog)) return null;\r\n\t\treturn dialog;\r\n\t};\r\n\r\n\tsetCurrentDialog = (dialog) => {\r\n\t\tthis.props.setCurrentDialog(dialog);\r\n\t\t// this.props.startChatting(dialog);\r\n\t};\r\n\r\n\trender() {\r\n\t\tif (this.props.match.params.dialog == undefined)\r\n\t\t\treturn <Redirect to={`/dialogs/${this.props.currentDialog}`} />;\r\n\t\treturn <Dialogs {...this.props} />;\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tdialogs: state.dialogsPage.dialogs,\r\n\t\tmessages: state.dialogsPage.messages,\r\n\t\tcurrentDialog: state.dialogsPage.currentDialog,\r\n\t};\r\n};\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, {\r\n\t\taddMessage,\r\n\t\tsetCurrentDialog,\r\n\t\t// loadDialogs,\r\n\t\t// startChatting,\r\n\t}),\r\n\twithRouter,\r\n\twithAuthRedirect\r\n)(DialogsContainer);\r\n"],"sourceRoot":""}